## Autogenerated by Scribe. DO NOT MODIFY.

name: Author
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/authors
    metadata:
      groupName: Author
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all authors'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sort:
        name: sort
        description: 'Data field(s).'
        required: false
        example: 'sort=title,-status'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'filter[id].':
        name: 'filter[id].'
        description: 'Filter by id.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'Filter by name. Wildcard supported.'
        required: false
        example: 'name=*fix*'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'filter[email]':
        name: 'filter[email]'
        description: 'Filter by email.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[createdAt]':
        name: 'filter[createdAt]'
        description: 'Filter by created_at.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[updatedAt]':
        name: 'filter[updatedAt]'
        description: 'Filter by updated_at.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      include:
        name: include
        description: 'related posts.'
        required: false
        example: include=posts
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      sort: 'sort=title,-status'
      'filter[name]': 'name=*fix*'
      include: include=posts
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/authors/{id}'
    metadata:
      groupName: Author
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get author details by id'
      description: 'Retrieve author by id with posts included'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"user","id":1,"attributes":{"name":"Stefan","email":"litewebapp@gmail.com"},"includes":[],"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/authors/{id}'
    metadata:
      groupName: Author
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update own profile information. Only for users with author:update permission'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.name:
        name: data.name
        description: ''
        required: false
        example: placeat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.email:
        name: data.email
        description: 'Must be a valid email address.'
        required: false
        example: emclaughlin@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        name: placeat
        email: emclaughlin@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|VWEGBmhN2UWB6NLBeh3p2m8PvuQkFMz3fqlneEqO03e8b90a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/authors/{author_id}/posts'
    metadata:
      groupName: Author
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get posts for given Author'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: 'The ID of the author.'
        required: true
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      author_id: odit
    queryParameters:
      sort:
        name: sort
        description: 'Data field(s).'
        required: false
        example: 'sort=title,-status'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'filter[id].':
        name: 'filter[id].'
        description: 'Filter by id.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'Filter by name. Wildcard supported.'
        required: false
        example: 'name=*fix*'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'filter[email]':
        name: 'filter[email]'
        description: 'Filter by email.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[createdAt]':
        name: 'filter[createdAt]'
        description: 'Filter by created_at.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[updatedAt]':
        name: 'filter[updatedAt]'
        description: 'Filter by updated_at.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      include:
        name: include
        description: 'related posts.'
        required: false
        example: include=posts
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      sort: 'sort=title,-status'
      'filter[name]': 'name=*fix*'
      include: include=posts
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost\/api\/v1\/authors\/odit\/posts?page=1","last":"http:\/\/localhost\/api\/v1\/authors\/odit\/posts?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors\/odit\/posts?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/authors\/odit\/posts","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
