## Autogenerated by Scribe. DO NOT MODIFY.

name: Post
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/posts
    metadata:
      groupName: Post
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all posts'
      description: 'Get all posts with sort, filter or include option'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sort:
        name: sort
        description: 'Data field(s).'
        required: false
        example: 'sort=title,-status'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'filter[title]':
        name: 'filter[title]'
        description: 'Filter by title. Wildcards are supported.'
        required: false
        example: 'title=*fix*'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'filter[status]':
        name: 'filter[status]'
        description: 'Filter by status code: A,D,X.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[createdAt]':
        name: 'filter[createdAt]'
        description: 'Filter by created_at.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[updatedAt]':
        name: 'filter[updatedAt]'
        description: 'Filter by updated_at.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      include:
        name: include
        description: 'related author.'
        required: false
        example: include=author
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      sort: 'sort=title,-status'
      'filter[title]': 'title=*fix*'
      include: include=author
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"post","id":1,"attributes":{"title":"quo quia voluptas","status":"X","createdAt":"2024-10-06T20:13:16.000000Z","updatedAt":"2024-10-06T20:13:16.000000Z"},"relationships":{"author":{"data":{"type":"user","id":4},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/1"}},{"type":"post","id":2,"attributes":{"title":"sint qui sequi","status":"X","createdAt":"2024-10-06T20:13:16.000000Z","updatedAt":"2024-10-06T20:13:16.000000Z"},"relationships":{"author":{"data":{"type":"user","id":4},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/2"}},{"type":"post","id":3,"attributes":{"title":"alias saepe et","status":"X","createdAt":"2024-10-06T20:13:16.000000Z","updatedAt":"2024-10-06T20:13:16.000000Z"},"relationships":{"author":{"data":{"type":"user","id":4},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/3"}},{"type":"post","id":8,"attributes":{"title":"accusantium et blanditiis","status":"X","createdAt":"2024-10-06T20:13:17.000000Z","updatedAt":"2024-10-06T20:13:17.000000Z"},"relationships":{"author":{"data":{"type":"user","id":4},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/8"}},{"type":"post","id":11,"attributes":{"title":"in quos blanditiis","status":"X","createdAt":"2024-10-06T20:13:17.000000Z","updatedAt":"2024-10-06T20:13:17.000000Z"},"relationships":{"author":{"data":{"type":"user","id":3},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/3"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/11"}},{"type":"post","id":13,"attributes":{"title":"architecto architecto repudiandae","status":"X","createdAt":"2024-10-06T20:13:17.000000Z","updatedAt":"2024-10-06T20:13:17.000000Z"},"relationships":{"author":{"data":{"type":"user","id":4},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/13"}},{"type":"post","id":15,"attributes":{"title":"porro molestias et","status":"X","createdAt":"2024-10-06T20:13:17.000000Z","updatedAt":"2024-10-06T20:13:17.000000Z"},"relationships":{"author":{"data":{"type":"user","id":2},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/2"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/15"}},{"type":"post","id":16,"attributes":{"title":"quisquam aut ut","status":"X","createdAt":"2024-10-06T20:13:17.000000Z","updatedAt":"2024-10-06T20:13:17.000000Z"},"relationships":{"author":{"data":{"type":"user","id":5},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/5"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/16"}},{"type":"post","id":19,"attributes":{"title":"quia expedita quis","status":"X","createdAt":"2024-10-06T20:13:17.000000Z","updatedAt":"2024-10-06T20:13:17.000000Z"},"relationships":{"author":{"data":{"type":"user","id":3},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/3"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/19"}},{"type":"post","id":20,"attributes":{"title":"et qui consequuntur","status":"X","createdAt":"2024-10-06T20:13:17.000000Z","updatedAt":"2024-10-06T20:13:17.000000Z"},"relationships":{"author":{"data":{"type":"user","id":5},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/5"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/20"}},{"type":"post","id":4,"attributes":{"title":"enim odit tempore","status":"D","createdAt":"2024-10-06T20:13:16.000000Z","updatedAt":"2024-10-06T20:13:16.000000Z"},"relationships":{"author":{"data":{"type":"user","id":4},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/4"}},{"type":"post","id":5,"attributes":{"title":"quod exercitationem dolorem","status":"D","createdAt":"2024-10-06T20:13:17.000000Z","updatedAt":"2024-10-06T20:13:17.000000Z"},"relationships":{"author":{"data":{"type":"user","id":3},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/3"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/5"}},{"type":"post","id":9,"attributes":{"title":"consectetur nostrum minus","status":"D","createdAt":"2024-10-06T20:13:17.000000Z","updatedAt":"2024-10-06T20:13:17.000000Z"},"relationships":{"author":{"data":{"type":"user","id":2},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/2"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/9"}},{"type":"post","id":12,"attributes":{"title":"exercitationem sequi qui","status":"D","createdAt":"2024-10-06T20:13:17.000000Z","updatedAt":"2024-10-06T20:13:17.000000Z"},"relationships":{"author":{"data":{"type":"user","id":3},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/3"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/12"}},{"type":"post","id":17,"attributes":{"title":"hic omnis in","status":"D","createdAt":"2024-10-06T20:13:17.000000Z","updatedAt":"2024-10-06T20:13:17.000000Z"},"relationships":{"author":{"data":{"type":"user","id":3},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/3"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/17"}}],"links":{"first":"http:\/\/localhost\/api\/v1\/posts?page=1","last":"http:\/\/localhost\/api\/v1\/posts?page=2","prev":null,"next":"http:\/\/localhost\/api\/v1\/posts?page=2"},"meta":{"current_page":1,"from":1,"last_page":2,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/posts?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/v1\/posts?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/v1\/posts?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/posts","per_page":15,"to":15,"total":20}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/posts
    metadata:
      groupName: Post
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create post'
      description: 'Only users with permission store:post can create posts (roles: author, admin)'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.title:
        name: data.title
        description: ''
        required: true
        example: impedit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.content:
        name: data.content
        description: ''
        required: true
        example: ad
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.status:
        name: data.status
        description: ''
        required: true
        example: D
        type: string
        enumValues:
          - A
          - D
          - X
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        title: impedit
        content: ad
        status: D
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "type": "post",
          "id": {autoIncrementId},
          "attributes": {
          "title": "{data.title}",
          "status": "{data.status}",
          "content": "{data.content}",
          "createdAt": "{autoGenerated}",
          "updatedAt": "{autoGenerated}"
          },
          "relationships": {
          "author": {
          "data": {
          "type": "user",
          "id": {AuthParam}
          },
          "links": {
          "self": "http://localhost/api/v1/authors/{userParamId}"
          }
          }
          },
          "links": {
          "self": "http://localhost/api/v1/posts/{autoIncrementId}"
          }
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|VWEGBmhN2UWB6NLBeh3p2m8PvuQkFMz3fqlneEqO03e8b90a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/posts/{id}'
    metadata:
      groupName: Post
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get post details by id'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"post","id":1,"attributes":{"title":"quo quia voluptas","status":"X","content":"Sint in eaque dolorem ut occaecati aut vel. Asperiores rerum enim expedita. Eos consequuntur autem doloribus aut. Tempora doloremque aut eos aut quia.","createdAt":"2024-10-06T20:13:16.000000Z","updatedAt":"2024-10-06T20:13:16.000000Z"},"relationships":{"author":{"data":{"type":"user","id":4},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}}},"includes":{"type":"user","id":4,"attributes":{"name":"Mrs. Destiney Kulas PhD","email":"rowe.mariano@example.org"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}},"links":{"self":"http:\/\/localhost\/api\/v1\/posts\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/posts/{id}'
    metadata:
      groupName: Post
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the post.'
      description: 'Only Users with permissions post:update and post:own:update can update the post (roles: author, admin)'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.title:
        name: data.title
        description: ''
        required: false
        example: minima
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.content:
        name: data.content
        description: ''
        required: false
        example: laborum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.status:
        name: data.status
        description: ''
        required: false
        example: A
        type: string
        enumValues:
          - A
          - D
          - X
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        title: minima
        content: laborum
        status: A
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "type": "post",
          "id": {AuthParam},
          "attributes": {
          "title": "{data.title}",
          "status": "{data.status}",
          "content": "{data.content}",
          "createdAt": "{autoGenerated}",
          "updatedAt": "{autoGenerated}"
          },
          "relationships": {
          "author": {
          "data": {
          "type": "user",
          "id": {AuthParam}
          },
          "links": {
          "self": "http://localhost/api/v1/authors/{userParamId}"
          }
          }
          },
          "links": {
          "self": "http://localhost/api/v1/posts/{autoIncrementId}"
          }
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|VWEGBmhN2UWB6NLBeh3p2m8PvuQkFMz3fqlneEqO03e8b90a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/posts/{id}'
    metadata:
      groupName: Post
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the post.'
      description: 'Only Users with permissions post:delete and post:own:delete can delete the post (roles: author, admin)'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|VWEGBmhN2UWB6NLBeh3p2m8PvuQkFMz3fqlneEqO03e8b90a'
    controller: null
    method: null
    route: null
    custom: []
