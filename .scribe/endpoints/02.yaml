name: User
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all users.'
      description: 'Retrieve all users allowed only for role:admin'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sort:
        name: sort
        description: 'Data field(s).'
        required: false
        example: 'name,-role'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'filter[id]':
        name: 'filter[id]'
        description: 'Filter by id.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'Filter by name.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[email]':
        name: 'filter[email]'
        description: 'Filter by email.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[createdAt]':
        name: 'filter[createdAt]'
        description: 'Filter by created_at.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[updatedAt]':
        name: 'filter[updatedAt]'
        description: 'Filter by updated_at.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[role]':
        name: 'filter[role]'
        description: 'Filter by role. Roles: user,author,admin.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[isAdmin]':
        name: 'filter[isAdmin]'
        description: 'Filter by is_admin.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      sort: 'name,-role'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"user","id":2,"attributes":{"name":"Brayan Littel","email":"karlee.bradtke@example.com","role":"author","is_admin":0,"emailVerifiedAt":"2024-10-06T20:13:16.000000Z","createdAt":"2024-10-06T20:13:16.000000Z","updatedAt":"2024-10-06T20:13:16.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/2"}},{"type":"user","id":5,"attributes":{"name":"Issac Hansen","email":"alexandrea.schulist@example.com","role":"author","is_admin":0,"emailVerifiedAt":"2024-10-06T20:13:16.000000Z","createdAt":"2024-10-06T20:13:16.000000Z","updatedAt":"2024-10-06T20:13:16.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/5"}},{"type":"user","id":3,"attributes":{"name":"Jalen Miller","email":"romaine.ortiz@example.net","role":"author","is_admin":0,"emailVerifiedAt":"2024-10-06T20:13:16.000000Z","createdAt":"2024-10-06T20:13:16.000000Z","updatedAt":"2024-10-06T20:13:16.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/3"}},{"type":"user","id":4,"attributes":{"name":"Mrs. Destiney Kulas PhD","email":"rowe.mariano@example.org","role":"author","is_admin":0,"emailVerifiedAt":"2024-10-06T20:13:16.000000Z","createdAt":"2024-10-06T20:13:16.000000Z","updatedAt":"2024-10-06T20:13:16.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}},{"type":"user","id":6,"attributes":{"name":"Prof. Oran Ferry","email":"moises73@example.net","role":"author","is_admin":0,"emailVerifiedAt":"2024-10-06T20:13:16.000000Z","createdAt":"2024-10-06T20:13:16.000000Z","updatedAt":"2024-10-06T20:13:16.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/6"}},{"type":"user","id":1,"attributes":{"name":"Stefan","email":"litewebapp@gmail.com","role":"admin","is_admin":0,"emailVerifiedAt":"2024-10-06T20:13:16.000000Z","createdAt":"2024-10-06T20:13:16.000000Z","updatedAt":"2024-10-06T20:13:16.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/1"}}],"links":{"first":"http:\/\/localhost\/api\/v1\/users?page=1","last":"http:\/\/localhost\/api\/v1\/users?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/users?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/users","per_page":15,"to":6,"total":6}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|VWEGBmhN2UWB6NLBeh3p2m8PvuQkFMz3fqlneEqO03e8b90a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create User'
      description: 'Create a user and assign a role. Only allowed for admin users'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.name:
        name: data.name
        description: ''
        required: true
        example: aliquid
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.email:
        name: data.email
        description: 'Must be a valid email address.'
        required: true
        example: mara90@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.password:
        name: data.password
        description: ''
        required: true
        example: 'P4*P@"\b8{'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.role:
        name: data.role
        description: ''
        required: true
        example: user
        type: string
        enumValues:
          - user
          - author
          - admin
        exampleWasSpecified: false
        custom: []
      data.is_admin:
        name: data.is_admin
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        name: aliquid
        email: mara90@example.net
        password: 'P4*P@"\b8{'
        role: user
        is_admin: false
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "type": "user",
          "id": "{autoIncrementId}",
          "attributes": {
          "name": "{data.name}",
          "email": "{data.email}",
          "role": "{data.role}",
          "isAdmin" : "{data.is_admin}",
          "emailVerifiedAt" : "{autoGenerated}",
          "createdAt" : "{autoGenerated}",
          "updatedAt" : "{autoGenerated}"
          },
          "includes": [],
          "links": {
          "self": "http://localhost/api/v1/users/{UserId}"
          }
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|VWEGBmhN2UWB6NLBeh3p2m8PvuQkFMz3fqlneEqO03e8b90a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific User by id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "type": "user",
          "id": "{autoIncrementId}",
          "attributes": {
          "name": "{data.name}",
          "email": "{data.email}",
          "role": "{data.role}",
          "isAdmin" : "{data.is_admin}",
          "emailVerifiedAt" : "{autoGenerated}",
          "createdAt" : "{autoGenerated}",
          "updatedAt" : "{autoGenerated}"
          },
          "includes": ["{PostResourceCollection}"],
          "links": {
          "self": "http://localhost/api/v1/users/{UserId}"
          }
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|VWEGBmhN2UWB6NLBeh3p2m8PvuQkFMz3fqlneEqO03e8b90a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User.'
      description: 'Update user details. Only allowed to users with admin permissions'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.name:
        name: data.name
        description: ''
        required: false
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.email:
        name: data.email
        description: 'Must be a valid email address.'
        required: false
        example: ottis01@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.password:
        name: data.password
        description: ''
        required: false
        example: 'HLVs1w,B}\RN'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.role:
        name: data.role
        description: ''
        required: false
        example: admin
        type: string
        enumValues:
          - user
          - author
          - admin
        exampleWasSpecified: false
        custom: []
      data.is_admin:
        name: data.is_admin
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        name: quia
        email: ottis01@example.org
        password: 'HLVs1w,B}\RN'
        role: admin
        is_admin: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "type": "user",
          "id": "{autoIncrementId}",
          "attributes": {
          "name": "{data.name}",
          "email": "{data.email}",
          "role": "{data.role}",
          "isAdmin" : "{data.is_admin}",
          "emailVerifiedAt" : "{autoGenerated}",
          "createdAt" : "{autoGenerated}",
          "updatedAt" : "{autoGenerated}"
          },
          "includes": ["{PostResourceCollection}"],
          "links": {
          "self": "http://localhost/api/v1/users/{UserId}"
          }
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|VWEGBmhN2UWB6NLBeh3p2m8PvuQkFMz3fqlneEqO03e8b90a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete User by id'
      description: 'Delete specific User, only allowed to users with admin permissions'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|VWEGBmhN2UWB6NLBeh3p2m8PvuQkFMz3fqlneEqO03e8b90a'
    controller: null
    method: null
    route: null
    custom: []
